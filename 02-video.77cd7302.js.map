{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,UAC5BC,EAAS,IAAIC,MAAMC,OAAOL,GAG9BM,GAAS,EAAAR,EAAAS,WAAS,SAASC,GAC7BL,EAAOM,iBAAiBC,MAAK,SAASC,GAClCC,aAAaC,QAAQ,2BAA4BC,KAAKC,UAAUJ,G,IACjEK,OAAM,SAASC,GACdC,QAAQC,IAAIF,EAAMG,Q,MAExB,KAEFjB,EAAOkB,GAAG,aAAcf,GAExB,IAAMgB,EAAUC,OAAOX,aAAaY,QAAQ,6BAE5CrB,EAAOsB,eAAeH,GAASZ,MAAK,SAASgB,G,IAE1CV,OAAM,SAASC,GACNA,EAAMU,I","sources":["src/js/02-video.js"],"sourcesContent":["import { throttle } from \"lodash\";\n\nconst iframe = document.querySelector('iframe');\n    const player = new Vimeo.Player(iframe);\n\n\nconst onPlay = throttle(function(data) {\n    player.getCurrentTime().then(function(seconds) {\n        localStorage.setItem(\"videoplayer-current-time\", JSON.stringify(seconds));\n    }).catch(function(error) {\n        console.log(error.message);\n    });\n},1000);\n\nplayer.on('timeupdate', onPlay);\n\nconst seconds = Number(localStorage.getItem(\"videoplayer-current-time\"));\n\nplayer.setCurrentTime(seconds).then(function(seconds) {\n    // seconds = the actual time that the player seeked to\n}).catch(function(error) {\n    switch (error.name) {\n        case 'RangeError':\n            // the time was less than 0 or greater than the videoâ€™s duration\n            break;\n\n        default:\n            // some other error occurred\n            break;\n    }\n}); \n\n"],"names":["$1WSnx","parcelRequire","$5a94271ad32ea534$var$iframe","document","querySelector","$5a94271ad32ea534$var$player","Vimeo","Player","$5a94271ad32ea534$var$onPlay","throttle","data","getCurrentTime","then","seconds1","localStorage","setItem","JSON","stringify","catch","error","console","log","message","on","$5a94271ad32ea534$var$seconds","Number","getItem","setCurrentTime","seconds","name"],"version":3,"file":"02-video.77cd7302.js.map"}