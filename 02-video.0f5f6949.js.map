{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,UAC5BC,EAAS,IAAIC,MAAMC,OAAOL,GAEpCM,QAAQC,IAAIJ,GAEZ,MAAMK,EAASC,EAAEC,UAAS,SAASC,GAC/BR,EAAOS,iBAAiBC,MAAK,SAASC,GAClCC,aAAaC,QAAQ,2BAA4BC,KAAKC,UAAUJ,G,IACjEK,OAAM,SAASC,GACdd,QAAQC,IAAIa,EAAMC,Q,MAExB,KAEFlB,EAAOmB,GAAG,aAAcd,GAExB,MAAMe,EAAUC,OAAOT,aAAaU,QAAQ,6BAE5CtB,EAAOuB,eAAeH,GAASV,MAAK,SAASc,G,IAE1CR,OAAM,SAASC,GACNA,EAAMQ,I","sources":["src/js/02-video.js"],"sourcesContent":["const iframe = document.querySelector('iframe');\n    const player = new Vimeo.Player(iframe);\n\nconsole.log(player);\n\nconst onPlay = _.throttle(function(data) {\n    player.getCurrentTime().then(function(seconds) {\n        localStorage.setItem(\"videoplayer-current-time\", JSON.stringify(seconds));\n    }).catch(function(error) {\n        console.log(error.message);\n    });\n},1000);\n\nplayer.on('timeupdate', onPlay);\n\nconst seconds = Number(localStorage.getItem(\"videoplayer-current-time\"));\n\nplayer.setCurrentTime(seconds).then(function(seconds) {\n    // seconds = the actual time that the player seeked to\n}).catch(function(error) {\n    switch (error.name) {\n        case 'RangeError':\n            // the time was less than 0 or greater than the videoâ€™s duration\n            break;\n\n        default:\n            // some other error occurred\n            break;\n    }\n}); \n\n"],"names":["$c006019e0678fe87$var$iframe","document","querySelector","$c006019e0678fe87$var$player","Vimeo","Player","console","log","$c006019e0678fe87$var$onPlay","_","throttle","data","getCurrentTime","then","seconds1","localStorage","setItem","JSON","stringify","catch","error","message","on","$c006019e0678fe87$var$seconds","Number","getItem","setCurrentTime","seconds","name"],"version":3,"file":"02-video.0f5f6949.js.map"}